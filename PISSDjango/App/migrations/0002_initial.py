# Generated by Django 5.1.4 on 2025-01-21 14:04

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('App', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='LectureType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('characteristics', models.PositiveSmallIntegerField()),
                ('seats', models.PositiveIntegerField()),
                ('floor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='App.floor')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=255)),
                ('priority', models.SmallIntegerField()),
                ('is_profile_disabled', models.BooleanField()),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StudentSpeciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubjectGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RoomEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='App.room')),
                ('attendees', models.ManyToManyField(blank=True, related_name='attended_events', to='App.user')),
                ('host', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hosted_events', to='App.user')),
            ],
            options={
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('ects_credits', models.FloatField()),
                ('weekly_lectures_duration', models.PositiveSmallIntegerField()),
                ('weekly_exercises_duration', models.PositiveSmallIntegerField()),
                ('weekly_computer_exercises_duration', models.PositiveSmallIntegerField()),
                ('lecturers', models.ManyToManyField(related_name='subjects', to='App.user')),
                ('subject_group', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='subjects', to='App.subjectgroup')),
            ],
        ),
        migrations.CreateModel(
            name='LessonEvent',
            fields=[
                ('roomevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='App.roomevent')),
                ('lecture_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_events', to='App.lecturetype')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_events', to='App.subject')),
            ],
            bases=('App.roomevent',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='App.user')),
                ('faculty_num', models.CharField(max_length=10)),
                ('is_in_charge_of_students_council_room', models.BooleanField(default=False)),
                ('speciality', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='students', to='App.studentspeciality')),
            ],
            bases=('App.user',),
        ),
    ]
